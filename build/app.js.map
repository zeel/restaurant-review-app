{"version":3,"sources":["../server/app.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","routes","mongoose","debug","http","mongodb","connect","app","process","env","NODE_ENV","use","static","set","join","__dirname","json","urlencoded","extended","req","res","next","err","Error","status","locals","message","error","get","render","port","normalizePort","PORT","server","createServer","listen","on","onError","onListening","val","parseInt","isNaN","syscall","bind","code","console","exit","addr","address","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar routes = require('./routes/reviews');\nvar mongoose = require('mongoose');\nvar debug = require('debug')('review-system:server');\nvar http = require('http');\n\n//move to env\nconst mongodb = 'mongodb://zeel215:zeel215@ds149577.mlab.com:49577/review-system';\nmongoose.connect(mongodb);\nvar app = express();\n\nif (process.env.NODE_ENV === 'production') {\n  app.use(express.static('client/build'));\n}\n\n// view engine setup \napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(\n  bodyParser.urlencoded({\n    extended: false,\n  })\n);\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'client/public')));\nroutes(app);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '3001');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n\nmodule.exports = app;"]}